{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onMovieAdd","useState","onTitleChange","film","prepareFilm","isFilmFound","onFilmFound","isLoading","onLoading","isLoaded","onLoadingSuccess","getFilm","a","fetch","then","response","json","result","searchResult","Response","preparedFilm","Title","Plot","Poster","imdbID","inputClass","classNames","input","searchButtonClass","button","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","App","data","makeMoviesList","movieToAdd","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da0890b3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=2141309e&t=';\n\nexport const FindMovie = ({ onMovieAdd }) => {\n  const [title, onTitleChange] = useState('');\n  const [film, prepareFilm] = useState(null);\n  const [isFilmFound, onFilmFound] = useState(null);\n  const [isLoading, onLoading] = useState(false);\n  const [isLoaded, onLoadingSuccess] = useState(null);\n  const getFilm = async() => {\n    onLoading(true);\n    const searchResult = await fetch(BASE_URL + title)\n      .then(response => response.json())\n      .then(result => result);\n\n    if (searchResult.Response === 'False') {\n      onFilmFound(false);\n      onLoading(false);\n      onLoadingSuccess(false);\n\n      return;\n    }\n\n    const preparedFilm = {\n      title: searchResult.Title,\n      description: searchResult.Plot,\n      imgUrl: searchResult.Poster,\n      imdbUrl: `https://www.imdb.com/title/${searchResult.imdbID}`,\n      imdbId: searchResult.imdbID,\n    };\n\n    prepareFilm(preparedFilm);\n    onFilmFound(true);\n    onLoading(false);\n    onLoadingSuccess(true);\n  };\n\n  const addFilm = () => {\n    onMovieAdd(film);\n    onTitleChange('');\n    onFilmFound(null);\n    prepareFilm(null);\n    onLoadingSuccess(null);\n  };\n\n  const inputClass = classNames({\n    input: true,\n    'is-danger': isFilmFound === false,\n    'is-success': isFilmFound === true,\n  });\n\n  const searchButtonClass = classNames({\n    button: true,\n    'is-light': isLoaded === null,\n    'is-success': isLoaded === true,\n    'is-danger': isLoaded === false,\n    'is-loading': isLoading,\n  });\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={inputClass}\n              value={title}\n              onChange={(event) => {\n                onTitleChange(event.target.value);\n                onFilmFound(null);\n                onLoadingSuccess(null);\n              }}\n            />\n          </div>\n          {isFilmFound === false && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={searchButtonClass}\n              onClick={getFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!isFilmFound}\n              onClick={addFilm}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isFilmFound && <MovieCard {...film} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onMovieAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, makeMoviesList] = useState(data);\n  const addMovie = (movieToAdd) => {\n    if (!movies.some(movie => movie.imdbId === movieToAdd.imdbId)) {\n      makeMoviesList(prevMovies => [...prevMovies, movieToAdd]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}